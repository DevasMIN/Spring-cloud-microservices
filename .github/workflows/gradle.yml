name: Build and Test Auth Service

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - id: set-modules
        run: |
          MODULES=$(grep "include '" settings.gradle | sed -e "s/include '\(.*\)'/\1/g" | grep -v "integration-test" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24.0.5-dind
        options: >-
          --privileged
          -e DOCKER_TLS_CERTDIR=/certs
        ports:
          - 2376:2376
        volumes:
          - /certs:/certs

    strategy:
      matrix:
        module: ${{ fromJson(needs.prepare.outputs.modules) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '7.6.1'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify Docker
        run: |
          docker ps
          docker version

      - name: Build Module ${{ matrix.module }}
        run: ./gradlew :${{ matrix.module }}:build

      - name: Test Module with Docker Support
        run: ./gradlew :${{ matrix.module }}:test
        env:
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock

  summary:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check build status
        if: needs.build.result == 'failure'
        run: exit 1